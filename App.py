# -*- coding: utf-8 -*-
import tkinter
from shutil import copyfile
from tkinter import messagebox
from PyQt5 import QtCore, QtGui, QtWidgets
from AppController import AppController
from AppModel import AppModel

controller = AppController()
model = AppModel()


class Ui_MainWindow(object):
    status = None

    def enable_navigation(self):
        self.tab_voluntary.setEnabled(False)
        self.tab_company.setEnabled(False)
        self.btn_search.setEnabled(True)
        self.txt_search.setReadOnly(False)
        self.txt_index.setReadOnly(False)
    
    def disable_navigation(self):
        self.tab_voluntary.setEnabled(True)
        self.tab_company.setEnabled(True)
        self.btn_search.setEnabled(False)
        self.txt_search.setReadOnly(True)
        self.txt_index.setReadOnly(True)

    def empty_inputs(self):
        self.pic_box.clear()
        self.lbl_register.setText('')
        self.txt_name.setText('')
        self.txt_father.setText('')
        self.txt_mother.setText('')
        self.txt_address.setText('')
        self.txt_number.setText('')
        self.txt_complement.setText('')
        self.txt_neighbourhood.setText('')
        self.txt_city.setText('')
        self.txt_postal_code.setText('')
        self.txt_home_phone.setText('')
        self.txt_mobile_phone.setText('')
        self.txt_cpf.setText('')
        self.txt_rg.setText('')
        self.txt_emitter.setText('')
        self.txt_home_town.setText('')
        self.txt_birth_date.setText('')
        self.txt_scholarship.setText('')
        self.txt_email.setText('')
        self.txt_company_name.setText('')
        self.txt_company_time.setText('')
        self.txt_ocupation.setText('')
        self.txt_company_address.setText('')
        self.txt_company_neighbourhood.setText('')
        self.txt_company_number.setText('')
        self.txt_company_city.setText('')
        self.txt_company_postal_code.setText('')
        self.txt_company_phone.setText('')
    
    def fill_inputs(self):        
        if self.txt_index.value() != 0:
            response = controller.select(self.txt_index.value())

            try:
                import os
                
                if os.path.exists(f'assets/pictures/{response[1]}.jpg'):
                    image = QtGui.QPixmap(f'assets/pictures/{response[1]}.jpg')
                    self.pic_box.setPixmap(image)
            except:
                print('picture not found')

            self.lbl_register.setText('Registrado em:\n\n\n' + response[2])
            self.txt_name.setText(response[3])
            self.txt_father.setText(response[4])
            self.txt_mother.setText(response[5])
            self.txt_address.setText(response[6])
            self.txt_number.setText(response[7])
            self.txt_complement.setText(response[8])
            self.txt_neighbourhood.setText(response[9])
            self.txt_city.setText(response[10])
            self.cmb_state.setCurrentText(response[11])
            self.txt_postal_code.setText(response[12])
            self.txt_home_phone.setText(response[13])
            self.txt_mobile_phone.setText(response[14])
            self.txt_cpf.setText(response[15])
            self.txt_rg.setText(response[16])
            self.txt_emitter.setText(response[17])
            self.txt_home_town.setText(response[18])
            self.cmb_home_state.setCurrentText(response[19])
            self.txt_birth_date.setText(response[20])
            self.cmb_civil_state.setCurrentText(response[21])
            self.cmb_gender.setCurrentText(response[22])
            self.txt_scholarship.setText(response[23])
            self.txt_email.setText(response[24])
            self.cmb_course.setCurrentText(response[25])
            self.txt_company_name.setText(response[26])
            self.txt_company_time.setText(response[27])
            self.txt_ocupation.setText(response[28])
            self.txt_company_address.setText(response[29])
            self.txt_company_neighbourhood.setText(response[30])
            self.txt_company_number.setText(response[31])
            self.txt_company_city.setText(response[32])
            self.cmb_company_state.setCurrentText(response[33])
            self.txt_company_postal_code.setText(response[34])
            self.txt_company_phone.setText(response[35])

    def btn_add_clicked(self):
        self.disable_navigation()
        self.empty_inputs()
        self.btn_add.setEnabled(False)
        self.btn_edit.setEnabled(False)
        self.btn_delete.setEnabled(False)
        self.btn_print.setEnabled(False)
        self.btn_cancel.setEnabled(True)
        self.btn_save.setEnabled(True)
    
        self.txt_name.setFocus()
        self.status = 'adding'

    def btn_edit_clicked(self):
        self.disable_navigation()
        self.btn_add.setEnabled(False)
        self.btn_edit.setEnabled(False)
        self.btn_delete.setEnabled(False)
        self.btn_print.setEnabled(False)
        self.btn_cancel.setEnabled(True)
        self.btn_save.setEnabled(True)

        self.txt_name.setFocus()
        self.status = 'editing'

    def btn_cancel_clicked(self):
        self.enable_navigation()
        
        try:
            self.fill_inputs()

        except:
            self.empty_inputs()

        self.btn_add.setEnabled(True)
        self.btn_edit.setEnabled(True)
        self.btn_delete.setEnabled(True)
        self.btn_print.setEnabled(True)
        self.btn_cancel.setEnabled(False)
        self.btn_save.setEnabled(False)

        self.status = None

    
    def btn_save_clicked(self):
        import datetime
        date = datetime.datetime.now().strftime('%d/%m/%Y')
        
        import random
        import string
        model.unique_id = ''.join(random.choices(string.ascii_lowercase + string.digits, k=8))

        model.name = self.txt_name.text().strip().upper()
        model.father = self.txt_father.text()
        model.mother = self.txt_mother.text()
        model.address = self.txt_address.text()
        model.number = self.txt_number.text()
        model.complement = self.txt_complement.text()
        model.neighbourhood = self.txt_neighbourhood.text()
        model.city = self.txt_city.text()
        model.state = self.cmb_state.currentText()
        model.postal_code = self.txt_postal_code.text()
        model.home_phone = self.txt_home_phone.text()
        model.mobile_phone = self.txt_mobile_phone.text()
        model.cpf = self.txt_cpf.text()
        model.rg = self.txt_rg.text()
        model.emitter = self.txt_emitter.text()
        model.home_town = self.txt_home_town.text()
        model.home_state = self.cmb_home_state.currentText()
        model.birth_date = self.txt_birth_date.text()
        model.civil_state = self.cmb_civil_state.currentText()
        model.gender = self.cmb_gender.currentText()
        model.scholarship = self.txt_scholarship.text()
        model.email = self.txt_email.text()
        model.course = self.cmb_course.currentText()
        model.company_name = self.txt_company_name.text()
        model.company_time = self.txt_company_time.text()
        model.ocupation = self.txt_ocupation.text()
        model.company_address = self.txt_company_address.text()
        model.company_neighbourhood = self.txt_company_neighbourhood.text()
        model.company_number = self.txt_company_number.text()
        model.company_city = self.txt_company_city.text()
        model.company_state = self.cmb_company_state.currentText()
        model.company_postal_code = self.txt_company_postal_code.text()
        model.company_phone = self.txt_company_phone.text()
        
        if len(model.name) < 5 or len(model.address) < 5 or len(model.number) < 1 or len(model.neighbourhood) < 3 or len(model.city) < 3 or len(model.mobile_phone) < 15 or len(model.cpf) < 14 or len(model.rg) < 12 or len(model.birth_date) < 10:
            root = tkinter.Tk()
            root.withdraw()
            messagebox.showerror('ERRO', 'Alguns campos não foram preenchidos corretamente.\nPreencha-os e tente novamente.')
            tkinter.Tk().destroy()

        else:
            root = tkinter.Tk()
            root.withdraw()
            choice = messagebox.askquestion('ATENÇÃO', 'Deseja salvar as alterações?')
            tkinter.Tk().destroy()

            if choice == 'yes':
                if self.status == 'adding':
                    new_total = controller.insert(model, date)
                    self.txt_index.setMaximum(new_total)
                    self.txt_index.setMinimum(1)
                    
                
                elif self.status == 'editing':
                    controller.update(model, self.txt_index.value())
                
                root = tkinter.Tk()
                root.withdraw()
                choice = messagebox.askquestion('ADICIONAR FOTO', 'Deseja adicionar uma foto desse voluntário?')
                tkinter.Tk().destroy()
                
                if choice == 'yes':
                    import platform
                    import os
                    path = None
                                            
                    if platform.system() == 'Linux':
                        path = os.path.expanduser('~') + '/Imagens'
                    else:
                        path = os.path.expanduser('~') + '\\Images'
                        
                    dialog = QtWidgets.QFileDialog()        
                    file = dialog.getOpenFileName(dialog, 'Selecionar imagem', path, 'Arquivos de imagem (*.jpeg *.jpg *.png)')    
                                            
                    if file[0] != '':
                        if platform.system() == 'Linux':
                            if not os.path.exists('./assets/pictures'):
                                os.mkdir('./assets/pictures')
                            
                            copyfile(file[0], f'./assets/pictures/{model.unique_id}.jpg')
                            
                        else:
                            if not os.path.exists('.\\assets\\pictures'):
                                os.mkdir('.\\assets\\pictures')
                            
                            copyfile(file[0], f'.\\assets\\pictures\\{model.unique_id}.jpg')


                        image = QtGui.QPixmap(f'assets/pictures/{model.unique_id}.jpg')
                        self.pic_box.setPixmap(image)
            
                        root = tkinter.Tk()
                        root.withdraw()
                        messagebox.showinfo('ADICIONAR FOTO', f'Imagem adicionada com sucesso para o voluntário <{model.name}>!')
                        tkinter.Tk().destroy()

                self.btn_cancel_clicked()

    def btn_delete_clicked(self):
        root = tkinter.Tk()
        root.withdraw()
        choice = messagebox.askquestion('DELETAR REGISTRO', f'Deseja excluir o registro de <{self.txt_name.text()}>?')
        tkinter.Tk().destroy()
        
        if choice == 'yes':
            controller.delete(self.txt_index.value())

            if controller.get_total() < 1:
                self.txt_index.setMinimum(0)
                self.txt_index.setMaximum(0)
                self.disable_navigation()
                self.tab_voluntary.setEnabled(False)
                self.tab_company.setEnabled(False)
                self.btn_delete.setEnabled(False)
                self.btn_print.setEnabled(False)
                self.btn_edit.setEnabled(False)
                self.empty_inputs()

            else:
                self.txt_index.setValue(1)
                self.txt_index.setMinimum(1)
                self.txt_index.setMaximum(controller.get_total())
                self.enable_navigation()
                self.fill_inputs()

    def btn_search_clicked(self):
        if self.txt_search.text().strip() == '':
            controller.gen_xlsx()
            
        else:
            controller.id_search(self.txt_search.text().strip().upper())

    def btn_print_clicked(self):
        controller.gen_contract(self.txt_index.value())
        

    def setupUi(self, MainWindow):
        MainWindow.setObjectName('MainWindow')
        MainWindow.resize(1020, 582)
        MainWindow.setWindowTitle('GERENCIADOR DE VOLUNTÁRIOS')
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName('centralwidget')
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName('gridLayout')
        self.btn_save = QtWidgets.QPushButton(self.centralwidget)
        self.btn_save.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.btn_save.setToolTip('<html><head/><body><p>Salvar alterações</p></body></html>')
        self.btn_save.setText('')
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap('assets/save.svg'), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btn_save.setIcon(icon)
        self.btn_save.setIconSize(QtCore.QSize(32, 32))
        self.btn_save.setFlat(True)
        self.btn_save.setEnabled(False)
        self.btn_save.setObjectName('btn_save')
        self.gridLayout.addWidget(self.btn_save, 3, 4, 1, 1)
        self.lbl_register = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lbl_register.sizePolicy().hasHeightForWidth())
        self.lbl_register.setSizePolicy(sizePolicy)
        self.lbl_register.setText('Registrado em:')
        self.lbl_register.setTextFormat(QtCore.Qt.MarkdownText)
        self.lbl_register.setAlignment(QtCore.Qt.AlignHCenter|QtCore.Qt.AlignTop)
        self.lbl_register.setObjectName('lbl_register')
        self.gridLayout.addWidget(self.lbl_register, 2, 2, 1, 3)
        self.btn_cancel = QtWidgets.QPushButton(self.centralwidget)
        self.btn_cancel.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.btn_cancel.setToolTip('<html><head/><body><p>Cancelar operação</p></body></html>')
        self.btn_cancel.setText('')
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap('assets/x-circle.svg'), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btn_cancel.setIcon(icon1)
        self.btn_cancel.setIconSize(QtCore.QSize(32, 32))
        self.btn_cancel.setFlat(True)
        self.btn_cancel.setEnabled(False)
        self.btn_cancel.setObjectName('btn_cancel')
        self.gridLayout.addWidget(self.btn_cancel, 3, 3, 1, 1)
        self.btn_edit = QtWidgets.QPushButton(self.centralwidget)
        self.btn_edit.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.btn_edit.setToolTip('<html><head/><body><p>Editar o registro atual</p></body></html>')
        self.btn_edit.setText('')
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap('assets/edit.svg'), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btn_edit.setIcon(icon2)
        self.btn_edit.setIconSize(QtCore.QSize(32, 32))
        self.btn_edit.setFlat(True)
        self.btn_edit.setObjectName('btn_edit')
        self.gridLayout.addWidget(self.btn_edit, 5, 2, 1, 1)
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tabWidget.sizePolicy().hasHeightForWidth())
        self.tabWidget.setSizePolicy(sizePolicy)
        self.tabWidget.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.tabWidget.setDocumentMode(False)
        self.tabWidget.setTabsClosable(False)
        self.tabWidget.setMovable(False)
        self.tabWidget.setTabBarAutoHide(False)
        self.tabWidget.setObjectName('tabWidget')
        self.tab_voluntary = QtWidgets.QWidget()
        self.tab_voluntary.setObjectName('tab_voluntary')
        self.gridLayout_2 = QtWidgets.QGridLayout(self.tab_voluntary)
        self.gridLayout_2.setObjectName('gridLayout_2')
        self.txt_name = QtWidgets.QLineEdit(self.tab_voluntary)
        self.txt_name.setText('')
        self.txt_name.setObjectName('txt_name')
        self.gridLayout_2.addWidget(self.txt_name, 1, 0, 1, 13)
        self.label_4 = QtWidgets.QLabel(self.tab_voluntary)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_4.setFont(font)
        self.label_4.setText('NOME DO PAI')
        self.label_4.setAlignment(QtCore.Qt.AlignCenter)
        self.label_4.setObjectName('label_4')
        self.gridLayout_2.addWidget(self.label_4, 2, 0, 1, 5)
        self.label_5 = QtWidgets.QLabel(self.tab_voluntary)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_5.setFont(font)
        self.label_5.setText('NOME DA MÃE')
        self.label_5.setAlignment(QtCore.Qt.AlignCenter)
        self.label_5.setObjectName('label_5')
        self.gridLayout_2.addWidget(self.label_5, 2, 5, 1, 8)
        self.txt_father = QtWidgets.QLineEdit(self.tab_voluntary)
        self.txt_father.setText('')
        self.txt_father.setObjectName('txt_father')
        self.gridLayout_2.addWidget(self.txt_father, 3, 0, 1, 5)
        self.txt_mother = QtWidgets.QLineEdit(self.tab_voluntary)
        self.txt_mother.setText('')
        self.txt_mother.setObjectName('txt_mother')
        self.gridLayout_2.addWidget(self.txt_mother, 3, 5, 1, 8)
        self.label_6 = QtWidgets.QLabel(self.tab_voluntary)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_6.setFont(font)
        self.label_6.setText('ENDEREÇO')
        self.label_6.setAlignment(QtCore.Qt.AlignCenter)
        self.label_6.setObjectName('label_6')
        self.gridLayout_2.addWidget(self.label_6, 4, 0, 1, 7)
        self.label_7 = QtWidgets.QLabel(self.tab_voluntary)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_7.setFont(font)
        self.label_7.setText('NÚMERO')
        self.label_7.setAlignment(QtCore.Qt.AlignCenter)
        self.label_7.setObjectName('label_7')
        self.gridLayout_2.addWidget(self.label_7, 4, 7, 1, 2)
        self.label_8 = QtWidgets.QLabel(self.tab_voluntary)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_8.setFont(font)
        self.label_8.setText('COMPLEMENTO')
        self.label_8.setAlignment(QtCore.Qt.AlignCenter)
        self.label_8.setObjectName('label_8')
        self.gridLayout_2.addWidget(self.label_8, 4, 9, 1, 4)
        self.txt_address = QtWidgets.QLineEdit(self.tab_voluntary)
        self.txt_address.setText('')
        self.txt_address.setObjectName('txt_address')
        self.gridLayout_2.addWidget(self.txt_address, 5, 0, 1, 7)
        self.txt_number = QtWidgets.QLineEdit(self.tab_voluntary)
        self.txt_number.setText('')
        self.txt_number.setObjectName('txt_number')
        self.gridLayout_2.addWidget(self.txt_number, 5, 7, 1, 2)
        self.txt_complement = QtWidgets.QLineEdit(self.tab_voluntary)
        self.txt_complement.setText('')
        self.txt_complement.setObjectName('txt_complement')
        self.gridLayout_2.addWidget(self.txt_complement, 5, 9, 1, 4)
        self.label_9 = QtWidgets.QLabel(self.tab_voluntary)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_9.setFont(font)
        self.label_9.setText('BAIRRO')
        self.label_9.setAlignment(QtCore.Qt.AlignCenter)
        self.label_9.setObjectName('label_9')
        self.gridLayout_2.addWidget(self.label_9, 6, 0, 1, 2)
        self.label_10 = QtWidgets.QLabel(self.tab_voluntary)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_10.setFont(font)
        self.label_10.setText('CIDADE')
        self.label_10.setAlignment(QtCore.Qt.AlignCenter)
        self.label_10.setObjectName('label_10')
        self.gridLayout_2.addWidget(self.label_10, 6, 2, 1, 8)
        self.label_11 = QtWidgets.QLabel(self.tab_voluntary)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_11.setFont(font)
        self.label_11.setText('ESTADO')
        self.label_11.setAlignment(QtCore.Qt.AlignCenter)
        self.label_11.setObjectName('label_11')
        self.gridLayout_2.addWidget(self.label_11, 6, 10, 1, 2)
        self.label_12 = QtWidgets.QLabel(self.tab_voluntary)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_12.setFont(font)
        self.label_12.setText('CEP')
        self.label_12.setAlignment(QtCore.Qt.AlignCenter)
        self.label_12.setObjectName('label_12')
        self.gridLayout_2.addWidget(self.label_12, 6, 12, 1, 1)
        self.txt_neighbourhood = QtWidgets.QLineEdit(self.tab_voluntary)
        self.txt_neighbourhood.setText('')
        self.txt_neighbourhood.setObjectName('txt_neighbourhood')
        self.gridLayout_2.addWidget(self.txt_neighbourhood, 7, 0, 1, 2)
        self.txt_city = QtWidgets.QLineEdit(self.tab_voluntary)
        self.txt_city.setText('')
        self.txt_city.setObjectName('txt_city')
        self.gridLayout_2.addWidget(self.txt_city, 7, 2, 1, 8)
        self.cmb_state = QtWidgets.QComboBox(self.tab_voluntary)
        self.cmb_state.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.cmb_state.setCurrentText('SP')
        self.cmb_state.setObjectName('cmb_state')
        self.cmb_state.addItem('')
        self.cmb_state.setItemText(0, 'AC')
        self.cmb_state.addItem('')
        self.cmb_state.setItemText(1, 'AL')
        self.cmb_state.addItem('')
        self.cmb_state.setItemText(2, 'AM')
        self.cmb_state.addItem('')
        self.cmb_state.setItemText(3, 'AP')
        self.cmb_state.addItem('')
        self.cmb_state.setItemText(4, 'BA')
        self.cmb_state.addItem('')
        self.cmb_state.setItemText(5, 'CE')
        self.cmb_state.addItem('')
        self.cmb_state.setItemText(6, 'DF')
        self.cmb_state.addItem('')
        self.cmb_state.setItemText(7, 'ES')
        self.cmb_state.addItem('')
        self.cmb_state.setItemText(8, 'GO')
        self.cmb_state.addItem('')
        self.cmb_state.setItemText(9, 'MA')
        self.cmb_state.addItem('')
        self.cmb_state.setItemText(10, 'MG')
        self.cmb_state.addItem('')
        self.cmb_state.setItemText(11, 'MS')
        self.cmb_state.addItem('')
        self.cmb_state.setItemText(12, 'MT')
        self.cmb_state.addItem('')
        self.cmb_state.setItemText(13, 'PA')
        self.cmb_state.addItem('')
        self.cmb_state.setItemText(14, 'PB')
        self.cmb_state.addItem('')
        self.cmb_state.setItemText(15, 'PE')
        self.cmb_state.addItem('')
        self.cmb_state.setItemText(16, 'PI')
        self.cmb_state.addItem('')
        self.cmb_state.setItemText(17, 'PR')
        self.cmb_state.addItem('')
        self.cmb_state.setItemText(18, 'RJ')
        self.cmb_state.addItem('')
        self.cmb_state.setItemText(19, 'RN')
        self.cmb_state.addItem('')
        self.cmb_state.setItemText(20, 'RO')
        self.cmb_state.addItem('')
        self.cmb_state.setItemText(21, 'RR')
        self.cmb_state.addItem('')
        self.cmb_state.setItemText(22, 'RS')
        self.cmb_state.addItem('')
        self.cmb_state.setItemText(23, 'SC')
        self.cmb_state.addItem('')
        self.cmb_state.setItemText(24, 'SE')
        self.cmb_state.addItem('')
        self.cmb_state.setItemText(25, 'SP')
        self.cmb_state.addItem('')
        self.cmb_state.setItemText(26, 'TO')
        self.gridLayout_2.addWidget(self.cmb_state, 7, 10, 1, 2)
        self.txt_postal_code = QtWidgets.QLineEdit(self.tab_voluntary)
        self.txt_postal_code.setInputMask('99999-999')
        self.txt_postal_code.setText('-')
        self.txt_postal_code.setClearButtonEnabled(False)
        self.txt_postal_code.setObjectName('txt_postal_code')
        self.gridLayout_2.addWidget(self.txt_postal_code, 7, 12, 1, 1)
        self.label_24 = QtWidgets.QLabel(self.tab_voluntary)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_24.setFont(font)
        self.label_24.setText('TELEFONE RESIDENCIAL')
        self.label_24.setAlignment(QtCore.Qt.AlignCenter)
        self.label_24.setObjectName('label_24')
        self.gridLayout_2.addWidget(self.label_24, 8, 0, 1, 1)
        self.label_25 = QtWidgets.QLabel(self.tab_voluntary)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_25.setFont(font)
        self.label_25.setText('TELEFONE CELULAR')
        self.label_25.setAlignment(QtCore.Qt.AlignCenter)
        self.label_25.setObjectName('label_25')
        self.gridLayout_2.addWidget(self.label_25, 8, 1, 1, 2)
        self.label_26 = QtWidgets.QLabel(self.tab_voluntary)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_26.setFont(font)
        self.label_26.setText('CPF')
        self.label_26.setAlignment(QtCore.Qt.AlignCenter)
        self.label_26.setObjectName('label_26')
        self.gridLayout_2.addWidget(self.label_26, 8, 3, 1, 3)
        self.label_27 = QtWidgets.QLabel(self.tab_voluntary)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_27.setFont(font)
        self.label_27.setText('RG')
        self.label_27.setAlignment(QtCore.Qt.AlignCenter)
        self.label_27.setObjectName('label_27')
        self.gridLayout_2.addWidget(self.label_27, 8, 6, 1, 5)
        self.label_28 = QtWidgets.QLabel(self.tab_voluntary)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_28.setFont(font)
        self.label_28.setText('ORGÃO EMISSOR / UF')
        self.label_28.setAlignment(QtCore.Qt.AlignCenter)
        self.label_28.setObjectName('label_28')
        self.gridLayout_2.addWidget(self.label_28, 8, 11, 1, 2)
        self.txt_home_phone = QtWidgets.QLineEdit(self.tab_voluntary)
        self.txt_home_phone.setInputMask('(99) 9999-9999')
        self.txt_home_phone.setText('() -')
        self.txt_home_phone.setObjectName('txt_home_phone')
        self.gridLayout_2.addWidget(self.txt_home_phone, 9, 0, 1, 1)
        self.txt_mobile_phone = QtWidgets.QLineEdit(self.tab_voluntary)
        self.txt_mobile_phone.setInputMask('(99) 99999-9999')
        self.txt_mobile_phone.setText('() -')
        self.txt_mobile_phone.setObjectName('txt_mobile_phone')
        self.gridLayout_2.addWidget(self.txt_mobile_phone, 9, 1, 1, 2)
        self.txt_cpf = QtWidgets.QLineEdit(self.tab_voluntary)
        self.txt_cpf.setInputMask('999.999.999-99')
        self.txt_cpf.setText('..-')
        self.txt_cpf.setObjectName('txt_cpf')
        self.gridLayout_2.addWidget(self.txt_cpf, 9, 3, 1, 3)
        self.txt_rg = QtWidgets.QLineEdit(self.tab_voluntary)
        self.txt_rg.setInputMask('NN.NNN.NNN-N')
        self.txt_rg.setText('..-')
        self.txt_rg.setObjectName('txt_rg')
        self.gridLayout_2.addWidget(self.txt_rg, 9, 6, 1, 5)
        self.txt_emitter = QtWidgets.QLineEdit(self.tab_voluntary)
        self.txt_emitter.setText('')
        self.txt_emitter.setObjectName('txt_emitter')
        self.gridLayout_2.addWidget(self.txt_emitter, 9, 11, 1, 2)
        self.label_23 = QtWidgets.QLabel(self.tab_voluntary)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_23.setFont(font)
        self.label_23.setText('CIDADE NATAL')
        self.label_23.setAlignment(QtCore.Qt.AlignCenter)
        self.label_23.setObjectName('label_23')
        self.gridLayout_2.addWidget(self.label_23, 10, 0, 1, 2)
        self.label_29 = QtWidgets.QLabel(self.tab_voluntary)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_29.setFont(font)
        self.label_29.setText('UF')
        self.label_29.setAlignment(QtCore.Qt.AlignCenter)
        self.label_29.setObjectName('label_29')
        self.gridLayout_2.addWidget(self.label_29, 10, 2, 1, 2)
        self.label_30 = QtWidgets.QLabel(self.tab_voluntary)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_30.setFont(font)
        self.label_30.setText('DATA DE NASCIMENTO')
        self.label_30.setAlignment(QtCore.Qt.AlignCenter)
        self.label_30.setObjectName('label_30')
        self.gridLayout_2.addWidget(self.label_30, 10, 4, 1, 4)
        self.label_31 = QtWidgets.QLabel(self.tab_voluntary)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_31.setFont(font)
        self.label_31.setText('ESTADO CIVIL')
        self.label_31.setAlignment(QtCore.Qt.AlignCenter)
        self.label_31.setObjectName('label_31')
        self.gridLayout_2.addWidget(self.label_31, 10, 8, 1, 4)
        self.label_32 = QtWidgets.QLabel(self.tab_voluntary)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_32.setFont(font)
        self.label_32.setText('GÊNERO')
        self.label_32.setAlignment(QtCore.Qt.AlignCenter)
        self.label_32.setObjectName('label_32')
        self.gridLayout_2.addWidget(self.label_32, 10, 12, 1, 1)
        self.txt_home_town = QtWidgets.QLineEdit(self.tab_voluntary)
        self.txt_home_town.setText('')
        self.txt_home_town.setObjectName('txt_home_town')
        self.gridLayout_2.addWidget(self.txt_home_town, 11, 0, 1, 2)
        self.cmb_home_state = QtWidgets.QComboBox(self.tab_voluntary)
        self.cmb_home_state.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.cmb_home_state.setCurrentText('AC')
        self.cmb_home_state.setObjectName('cmb_home_state')
        self.cmb_home_state.addItem('')
        self.cmb_home_state.setItemText(0, 'AC')
        self.cmb_home_state.addItem('')
        self.cmb_home_state.setItemText(1, 'AL')
        self.cmb_home_state.addItem('')
        self.cmb_home_state.setItemText(2, 'AM')
        self.cmb_home_state.addItem('')
        self.cmb_home_state.setItemText(3, 'AP')
        self.cmb_home_state.addItem('')
        self.cmb_home_state.setItemText(4, 'BA')
        self.cmb_home_state.addItem('')
        self.cmb_home_state.setItemText(5, 'CE')
        self.cmb_home_state.addItem('')
        self.cmb_home_state.setItemText(6, 'DF')
        self.cmb_home_state.addItem('')
        self.cmb_home_state.setItemText(7, 'ES')
        self.cmb_home_state.addItem('')
        self.cmb_home_state.setItemText(8, 'GO')
        self.cmb_home_state.addItem('')
        self.cmb_home_state.setItemText(9, 'MA')
        self.cmb_home_state.addItem('')
        self.cmb_home_state.setItemText(10, 'MG')
        self.cmb_home_state.addItem('')
        self.cmb_home_state.setItemText(11, 'MS')
        self.cmb_home_state.addItem('')
        self.cmb_home_state.setItemText(12, 'MT')
        self.cmb_home_state.addItem('')
        self.cmb_home_state.setItemText(13, 'PA')
        self.cmb_home_state.addItem('')
        self.cmb_home_state.setItemText(14, 'PB')
        self.cmb_home_state.addItem('')
        self.cmb_home_state.setItemText(15, 'PE')
        self.cmb_home_state.addItem('')
        self.cmb_home_state.setItemText(16, 'PI')
        self.cmb_home_state.addItem('')
        self.cmb_home_state.setItemText(17, 'PR')
        self.cmb_home_state.addItem('')
        self.cmb_home_state.setItemText(18, 'RJ')
        self.cmb_home_state.addItem('')
        self.cmb_home_state.setItemText(19, 'RN')
        self.cmb_home_state.addItem('')
        self.cmb_home_state.setItemText(20, 'RO')
        self.cmb_home_state.addItem('')
        self.cmb_home_state.setItemText(21, 'RR')
        self.cmb_home_state.addItem('')
        self.cmb_home_state.setItemText(22, 'RS')
        self.cmb_home_state.addItem('')
        self.cmb_home_state.setItemText(23, 'SC')
        self.cmb_home_state.addItem('')
        self.cmb_home_state.setItemText(24, 'SE')
        self.cmb_home_state.addItem('')
        self.cmb_home_state.setItemText(25, 'SP')
        self.cmb_home_state.addItem('')
        self.cmb_home_state.setItemText(26, 'TO')
        self.gridLayout_2.addWidget(self.cmb_home_state, 11, 2, 1, 2)
        self.txt_birth_date = QtWidgets.QLineEdit(self.tab_voluntary)
        self.txt_birth_date.setInputMask('99/99/9999')
        self.txt_birth_date.setText('//')
        self.txt_birth_date.setObjectName('txt_birth_date')
        self.gridLayout_2.addWidget(self.txt_birth_date, 11, 4, 1, 4)
        self.cmb_civil_state = QtWidgets.QComboBox(self.tab_voluntary)
        self.cmb_civil_state.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.cmb_civil_state.setCurrentText('SOLTEIRO (A)')
        self.cmb_civil_state.setObjectName('cmb_civil_state')
        self.cmb_civil_state.addItem('')
        self.cmb_civil_state.setItemText(0, 'SOLTEIRO (A)')
        self.cmb_civil_state.addItem('')
        self.cmb_civil_state.setItemText(1, 'CASADO (A)')
        self.cmb_civil_state.addItem('')
        self.cmb_civil_state.setItemText(2, 'DIVORCIADO (A)')
        self.cmb_civil_state.addItem('')
        self.cmb_civil_state.setItemText(3, 'VIÚVO (A)')
        self.gridLayout_2.addWidget(self.cmb_civil_state, 11, 8, 1, 4)
        self.cmb_gender = QtWidgets.QComboBox(self.tab_voluntary)
        self.cmb_gender.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.cmb_gender.setCurrentText('MASCULINO')
        self.cmb_gender.setObjectName('cmb_gender')
        self.cmb_gender.addItem('')
        self.cmb_gender.setItemText(0, 'MASCULINO')
        self.cmb_gender.addItem('')
        self.cmb_gender.setItemText(1, 'FEMININO')
        self.cmb_gender.addItem('')
        self.cmb_gender.setItemText(2, 'OUTRO')
        self.gridLayout_2.addWidget(self.cmb_gender, 11, 12, 1, 1)
        self.label_34 = QtWidgets.QLabel(self.tab_voluntary)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_34.setFont(font)
        self.label_34.setText('ESCOLARIDADE')
        self.label_34.setAlignment(QtCore.Qt.AlignCenter)
        self.label_34.setObjectName('label_34')
        self.gridLayout_2.addWidget(self.label_34, 12, 0, 1, 2)
        self.label_33 = QtWidgets.QLabel(self.tab_voluntary)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_33.setFont(font)
        self.label_33.setText('EMAIL')
        self.label_33.setAlignment(QtCore.Qt.AlignCenter)
        self.label_33.setObjectName('label_33')
        self.gridLayout_2.addWidget(self.label_33, 12, 2, 1, 8)
        self.label_35 = QtWidgets.QLabel(self.tab_voluntary)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_35.setFont(font)
        self.label_35.setText('CURSO DOUTRINÁRIO')
        self.label_35.setAlignment(QtCore.Qt.AlignCenter)
        self.label_35.setObjectName('label_35')
        self.gridLayout_2.addWidget(self.label_35, 12, 10, 1, 3)
        self.txt_scholarship = QtWidgets.QLineEdit(self.tab_voluntary)
        self.txt_scholarship.setText('')
        self.txt_scholarship.setObjectName('txt_scholarship')
        self.gridLayout_2.addWidget(self.txt_scholarship, 13, 0, 1, 2)
        self.txt_email = QtWidgets.QLineEdit(self.tab_voluntary)
        self.txt_email.setText('')
        self.txt_email.setObjectName('txt_email')
        self.gridLayout_2.addWidget(self.txt_email, 13, 2, 1, 8)
        self.cmb_course = QtWidgets.QComboBox(self.tab_voluntary)
        self.cmb_course.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.cmb_course.setCurrentText('NENHUM')
        self.cmb_course.setObjectName('cmb_course')
        self.cmb_course.addItem('')
        self.cmb_course.setItemText(0, 'NENHUM')
        self.cmb_course.addItem('')
        self.cmb_course.setItemText(1, 'O QUE É ESPIRITISMO?')
        self.cmb_course.addItem('')
        self.cmb_course.setItemText(2, 'BÁSICO DO ESPIRITISMO (1 ANO)')
        self.cmb_course.addItem('')
        self.cmb_course.setItemText(3, 'BÁSICO DO ESPIRITISMO (2 ANO)')
        self.cmb_course.addItem('')
        self.cmb_course.setItemText(4, 'APRENDIZ DO EVANGELHO (1 ANO)')
        self.cmb_course.addItem('')
        self.cmb_course.setItemText(5, 'APRENDIZ DO EVANGELHO (2 ANO)')
        self.cmb_course.addItem('')
        self.cmb_course.setItemText(6, 'EDUCAÇÃO MEDIÚNICA (1 ANO)')
        self.cmb_course.addItem('')
        self.cmb_course.setItemText(7, 'EDUCAÇÃO MEDIÚNICA (2 ANO)')
        self.gridLayout_2.addWidget(self.cmb_course, 13, 10, 1, 3)
        self.label_3 = QtWidgets.QLabel(self.tab_voluntary)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setText('NOME')
        self.label_3.setObjectName('label_3')
        self.gridLayout_2.addWidget(self.label_3, 0, 0, 1, 13)
        self.tabWidget.addTab(self.tab_voluntary, 'DADOS DO VOLUNTÁRIO')
        self.tab_company = QtWidgets.QWidget()
        self.tab_company.setObjectName('tab_company')
        self.gridLayout_3 = QtWidgets.QGridLayout(self.tab_company)
        self.gridLayout_3.setObjectName('gridLayout_3')
        self.label_36 = QtWidgets.QLabel(self.tab_company)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_36.setFont(font)
        self.label_36.setText('NOME DA EMPRESA (RAZÃO SOCIAL)')
        self.label_36.setObjectName('label_36')
        self.gridLayout_3.addWidget(self.label_36, 0, 0, 1, 2)
        self.txt_company_name = QtWidgets.QLineEdit(self.tab_company)
        self.txt_company_name.setText('')
        self.txt_company_name.setObjectName('txt_company_name')
        self.gridLayout_3.addWidget(self.txt_company_name, 1, 0, 1, 4)
        self.label_37 = QtWidgets.QLabel(self.tab_company)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_37.setFont(font)
        self.label_37.setText('CARGO')
        self.label_37.setObjectName('label_37')
        self.gridLayout_3.addWidget(self.label_37, 2, 0, 1, 2)
        self.txt_ocupation = QtWidgets.QLineEdit(self.tab_company)
        self.txt_ocupation.setText('')
        self.txt_ocupation.setObjectName('txt_ocupation')
        self.gridLayout_3.addWidget(self.txt_ocupation, 3, 0, 1, 4)
        self.label_38 = QtWidgets.QLabel(self.tab_company)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_38.setFont(font)
        self.label_38.setText('TEMPO DE EMPRESA (EM MESES)')
        self.label_38.setObjectName('label_38')
        self.gridLayout_3.addWidget(self.label_38, 4, 0, 1, 2)
        self.txt_company_time = QtWidgets.QLineEdit(self.tab_company)
        self.txt_company_time.setText('')
        self.txt_company_time.setObjectName('txt_company_time')
        self.gridLayout_3.addWidget(self.txt_company_time, 5, 0, 1, 4)
        self.label_43 = QtWidgets.QLabel(self.tab_company)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_43.setFont(font)
        self.label_43.setText('ENDEREÇO')
        self.label_43.setAlignment(QtCore.Qt.AlignCenter)
        self.label_43.setObjectName('label_43')
        self.gridLayout_3.addWidget(self.label_43, 6, 0, 1, 3)
        self.label_39 = QtWidgets.QLabel(self.tab_company)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_39.setFont(font)
        self.label_39.setText('NÚMERO')
        self.label_39.setAlignment(QtCore.Qt.AlignCenter)
        self.label_39.setObjectName('label_39')
        self.gridLayout_3.addWidget(self.label_39, 6, 3, 1, 1)
        self.txt_company_address = QtWidgets.QLineEdit(self.tab_company)
        self.txt_company_address.setText('')
        self.txt_company_address.setObjectName('txt_company_address')
        self.gridLayout_3.addWidget(self.txt_company_address, 7, 0, 1, 3)
        self.txt_company_number = QtWidgets.QLineEdit(self.tab_company)
        self.txt_company_number.setText('')
        self.txt_company_number.setObjectName('txt_company_number')
        self.gridLayout_3.addWidget(self.txt_company_number, 7, 3, 1, 1)
        self.label_44 = QtWidgets.QLabel(self.tab_company)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_44.setFont(font)
        self.label_44.setText('BAIRRO')
        self.label_44.setAlignment(QtCore.Qt.AlignCenter)
        self.label_44.setObjectName('label_44')
        self.gridLayout_3.addWidget(self.label_44, 8, 0, 1, 1)
        self.label_42 = QtWidgets.QLabel(self.tab_company)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_42.setFont(font)
        self.label_42.setText('CIDADE')
        self.label_42.setAlignment(QtCore.Qt.AlignCenter)
        self.label_42.setObjectName('label_42')
        self.gridLayout_3.addWidget(self.label_42, 8, 1, 1, 1)
        self.label_45 = QtWidgets.QLabel(self.tab_company)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_45.setFont(font)
        self.label_45.setText('ESTADO')
        self.label_45.setAlignment(QtCore.Qt.AlignCenter)
        self.label_45.setObjectName('label_45')
        self.gridLayout_3.addWidget(self.label_45, 8, 2, 1, 1)
        self.label_41 = QtWidgets.QLabel(self.tab_company)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_41.setFont(font)
        self.label_41.setText('CEP')
        self.label_41.setAlignment(QtCore.Qt.AlignCenter)
        self.label_41.setObjectName('label_41')
        self.gridLayout_3.addWidget(self.label_41, 8, 3, 1, 1)
        self.txt_company_neighbourhood = QtWidgets.QLineEdit(self.tab_company)
        self.txt_company_neighbourhood.setText('')
        self.txt_company_neighbourhood.setObjectName('txt_company_neighbourhood')
        self.gridLayout_3.addWidget(self.txt_company_neighbourhood, 9, 0, 1, 1)
        self.txt_company_city = QtWidgets.QLineEdit(self.tab_company)
        self.txt_company_city.setText('')
        self.txt_company_city.setObjectName('txt_company_city')
        self.gridLayout_3.addWidget(self.txt_company_city, 9, 1, 1, 1)
        self.cmb_company_state = QtWidgets.QComboBox(self.tab_company)
        self.cmb_company_state.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.cmb_company_state.setCurrentText('SP')
        self.cmb_company_state.setObjectName('cmb_company_state')
        self.cmb_company_state.addItem('')
        self.cmb_company_state.setItemText(0, 'AC')
        self.cmb_company_state.addItem('')
        self.cmb_company_state.setItemText(1, 'AL')
        self.cmb_company_state.addItem('')
        self.cmb_company_state.setItemText(2, 'AM')
        self.cmb_company_state.addItem('')
        self.cmb_company_state.setItemText(3, 'AP')
        self.cmb_company_state.addItem('')
        self.cmb_company_state.setItemText(4, 'BA')
        self.cmb_company_state.addItem('')
        self.cmb_company_state.setItemText(5, 'CE')
        self.cmb_company_state.addItem('')
        self.cmb_company_state.setItemText(6, 'DF')
        self.cmb_company_state.addItem('')
        self.cmb_company_state.setItemText(7, 'ES')
        self.cmb_company_state.addItem('')
        self.cmb_company_state.setItemText(8, 'GO')
        self.cmb_company_state.addItem('')
        self.cmb_company_state.setItemText(9, 'MA')
        self.cmb_company_state.addItem('')
        self.cmb_company_state.setItemText(10, 'MG')
        self.cmb_company_state.addItem('')
        self.cmb_company_state.setItemText(11, 'MS')
        self.cmb_company_state.addItem('')
        self.cmb_company_state.setItemText(12, 'MT')
        self.cmb_company_state.addItem('')
        self.cmb_company_state.setItemText(13, 'PA')
        self.cmb_company_state.addItem('')
        self.cmb_company_state.setItemText(14, 'PB')
        self.cmb_company_state.addItem('')
        self.cmb_company_state.setItemText(15, 'PE')
        self.cmb_company_state.addItem('')
        self.cmb_company_state.setItemText(16, 'PI')
        self.cmb_company_state.addItem('')
        self.cmb_company_state.setItemText(17, 'PR')
        self.cmb_company_state.addItem('')
        self.cmb_company_state.setItemText(18, 'RJ')
        self.cmb_company_state.addItem('')
        self.cmb_company_state.setItemText(19, 'RN')
        self.cmb_company_state.addItem('')
        self.cmb_company_state.setItemText(20, 'RO')
        self.cmb_company_state.addItem('')
        self.cmb_company_state.setItemText(21, 'RR')
        self.cmb_company_state.addItem('')
        self.cmb_company_state.setItemText(22, 'RS')
        self.cmb_company_state.addItem('')
        self.cmb_company_state.setItemText(23, 'SC')
        self.cmb_company_state.addItem('')
        self.cmb_company_state.setItemText(24, 'SE')
        self.cmb_company_state.addItem('')
        self.cmb_company_state.setItemText(25, 'SP')
        self.cmb_company_state.addItem('')
        self.cmb_company_state.setItemText(26, 'TO')
        self.gridLayout_3.addWidget(self.cmb_company_state, 9, 2, 1, 1)
        self.txt_company_postal_code = QtWidgets.QLineEdit(self.tab_company)
        self.txt_company_postal_code.setInputMask('99999-999')
        self.txt_company_postal_code.setText('-')
        self.txt_company_postal_code.setObjectName('txt_company_postal_code')
        self.gridLayout_3.addWidget(self.txt_company_postal_code, 9, 3, 1, 1)
        self.label_40 = QtWidgets.QLabel(self.tab_company)
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_40.setFont(font)
        self.label_40.setText('TELEFONE PARA CONTATO')
        self.label_40.setAlignment(QtCore.Qt.AlignCenter)
        self.label_40.setObjectName('label_40')
        self.gridLayout_3.addWidget(self.label_40, 10, 0, 1, 4)
        self.txt_company_phone = QtWidgets.QLineEdit(self.tab_company)
        self.txt_company_phone.setInputMask('(99) 9999-9999')
        self.txt_company_phone.setText('() -')
        self.txt_company_phone.setObjectName('txt_company_phone')
        self.gridLayout_3.addWidget(self.txt_company_phone, 11, 0, 1, 4)
        self.tabWidget.addTab(self.tab_company, 'DADOS DA EMPRESA')
        self.gridLayout.addWidget(self.tabWidget, 1, 0, 3, 1)
        self.btn_search = QtWidgets.QPushButton(self.centralwidget)
        self.btn_search.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.btn_search.setToolTip('<html><head/><body><p>Digite um nome no campo de pesquisa ao lado para fazer uma busca por um ID correspondente ou deixe vazio para gerar uma lista com todos os voluntários</p></body></html>')
        self.btn_search.setText('PESQUISAR')
        self.btn_search.setObjectName('btn_search')
        self.gridLayout.addWidget(self.btn_search, 0, 2, 1, 3)
        self.pic_box = QtWidgets.QLabel(self.centralwidget)
        self.pic_box.setMinimumSize(QtCore.QSize(150, 200))
        self.pic_box.setMaximumSize(QtCore.QSize(150, 200))
        self.pic_box.setFrameShape(QtWidgets.QFrame.Box)
        self.pic_box.setFrameShadow(QtWidgets.QFrame.Raised)
        self.pic_box.setText('')
        self.pic_box.setScaledContents(True)
        self.pic_box.setObjectName('pic_box')
        self.gridLayout.addWidget(self.pic_box, 1, 2, 1, 3)
        self.txt_index = QtWidgets.QSpinBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.txt_index.sizePolicy().hasHeightForWidth())
        self.txt_index.setSizePolicy(sizePolicy)
        self.txt_index.setObjectName('txt_index')
        self.gridLayout.addWidget(self.txt_index, 5, 0, 1, 1)
        self.btn_print = QtWidgets.QPushButton(self.centralwidget)
        self.btn_print.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.btn_print.setToolTip('<html><head/><body><p>Imprimir a ficha do registro atual</p></body></html>')
        self.btn_print.setText('')
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap('assets/printer.svg'), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btn_print.setIcon(icon3)
        self.btn_print.setIconSize(QtCore.QSize(32, 32))
        self.btn_print.setFlat(True)
        self.btn_print.setObjectName('btn_print')
        self.gridLayout.addWidget(self.btn_print, 5, 4, 1, 1)
        self.txt_search = QtWidgets.QLineEdit(self.centralwidget)
        self.txt_search.setToolTip('')
        self.txt_search.setText('')
        self.txt_search.setPlaceholderText('Digite um nome para pesquisar seu ID ou deixe vazio para gerar uma lista com todos os voluntários')
        self.txt_search.setObjectName('txt_search')
        self.gridLayout.addWidget(self.txt_search, 0, 0, 1, 2)
        self.btn_delete = QtWidgets.QPushButton(self.centralwidget)
        self.btn_delete.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.btn_delete.setToolTip('<html><head/><body><p>Excluir registro atual</p></body></html>')
        self.btn_delete.setText('')
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap('assets/trash-2.svg'), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btn_delete.setIcon(icon4)
        self.btn_delete.setIconSize(QtCore.QSize(32, 32))
        self.btn_delete.setFlat(True)
        self.btn_delete.setObjectName('btn_delete')
        self.gridLayout.addWidget(self.btn_delete, 5, 3, 1, 1)
        self.btn_add = QtWidgets.QPushButton(self.centralwidget)
        self.btn_add.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.btn_add.setToolTip('<html><head/><body><p>Adicionar um registro</p></body></html>')
        self.btn_add.setText('')
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap('assets/plus-circle.svg'), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btn_add.setIcon(icon5)
        self.btn_add.setIconSize(QtCore.QSize(32, 32))
        self.btn_add.setFlat(True)
        self.btn_add.setObjectName('btn_add')
        self.gridLayout.addWidget(self.btn_add, 3, 2, 1, 1)

        controller.create()

        level = controller.get_access_level()

        if level == 'COMUM' or level == None:
            self.btn_add.setVisible(False)
            self.btn_edit.setVisible(False)
            self.btn_save.setVisible(False)
            self.btn_cancel.setVisible(False)
            self.btn_delete.setVisible(False)
        
        elif level == 'GERENTE':
            self.btn_delete.setVisible(False)
        
        self.btn_add.clicked.connect(self.btn_add_clicked)
        self.btn_edit.clicked.connect(self.btn_edit_clicked)
        self.btn_cancel.clicked.connect(self.btn_cancel_clicked)
        self.btn_save.clicked.connect(self.btn_save_clicked)
        self.btn_delete.clicked.connect(self.btn_delete_clicked)
        self.btn_print.clicked.connect(self.btn_print_clicked)
        self.btn_search.clicked.connect(self.btn_search_clicked)
        self.txt_index.valueChanged.connect(self.fill_inputs)

        if controller.get_total() < 1:
            self.txt_index.setMinimum(0)
            self.txt_index.setMaximum(0)
            self.disable_navigation()
            self.tab_voluntary.setEnabled(False)
            self.tab_company.setEnabled(False)
            self.btn_delete.setEnabled(False)
            self.btn_print.setEnabled(False)
            self.btn_edit.setEnabled(False)

        else:
            self.txt_index.setValue(1)
            self.txt_index.setMinimum(1)
            self.txt_index.setMaximum(controller.get_total())
            self.enable_navigation()
        
        MainWindow.setCentralWidget(self.centralwidget)

        self.tabWidget.setCurrentIndex(0)
        self.cmb_state.setCurrentIndex(25)
        self.cmb_home_state.setCurrentIndex(25)
        self.cmb_company_state.setCurrentIndex(25)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)


if __name__ == '__main__':
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
